#!/usr/bin/env zsh
# Executes commands at the start of an interactive session.

zmodload zsh/zprof
local zshrc_start=$(gdate +%s%N)

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi


# Init rbenv
eval "$(rbenv init -)"

# Fuzzy Completions
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# F path to completion functions
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
fpath=(
/usr/local/share/zsh/site-functions
$fpath
/usr/local/Homebrew/completions
/usr/local/var/homebrew/linked/zsh/share/zsh/functions
)

# gulp
eval "$(gulp --completion=zsh)"

# Personalizations
alias rhelp=run-help
alias gi='grep -i'
export CLICOLOR=xterm-color

# iTerm2 shell integration hooks
source ~/.iterm2_shell_integration.zsh

# Node version manager
# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" != "N/A" ] && [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm install
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc
gdate "+s%N"

# # Node version manager
 export NVM_LAZY_LOAD=true
 source "/Users/ryan/.nvm/zsh-nvm/zsh-nvm.plugin.zsh"

local zshrc_end=$(gdate +%s%N)
function calc () {
	bc -l <<< "$@"
}

print "~/.zshrc loaded:" $(calc "scale=3;($zshrc_end-$zshrc_start)/10^(9)") "seconds"
unset zshrc_end
unset zshrc_start
